###USE UTF-8 encoding to open and edit this file
###https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
###https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html

##------------------------------------------------------------------------------------------##
#Spring Boot 所提供的配置优先级顺序比较复杂。按照优先级从高到低的顺序，具体的列表如下所示。
#    1. 命令行参数。
#    2. 通过 System.getProperties() 获取的 Java 系统参数。
#    3. 操作系统环境变量。
#    4. 从 java:comp/env 得到的 JNDI 属性。
#    5. 通过 RandomValuePropertySource 生成的“random.*”属性。
#    6. 应用 Jar 文件之外的属性文件。(通过spring.config.location参数)
#    7. 应用 Jar 文件内部的属性文件。
#    8. 在应用配置 Java 类（包含“@Configuration”注解的 Java 类）中通过“@PropertySource”注解声明的属性文件。
#    9. 通过“SpringApplication.setDefaultProperties”声明的默认属性。
#Spring Boot 的这个配置优先级看似复杂，其实是很合理的。比如命令行参数的优先级被设置为最高。
#这样的好处是可以在测试或生产环境中快速地修改配置参数值，而不需要重新打包和部署应用。
#SpringApplication 类默认会把以“--”开头的命令行参数转化成应用中可以使用的配置参数，如 “--name=Alex” 会设置配置参数 “name” 的值为 “Alex”。
#如果不需要这个功能，可以通过 “SpringApplication.setAddCommandLineProperties(false)” 禁用解析命令行参数。
###------------------------------------------------------------------------------------------##

# APPLICATION SETTINGS (SpringApplication)
#logging.level.org.springframework=DEBUG
spring.main.sources=classpath:META-INF/spring/root.xml

# multipart SETTINGS (SpringApplication)
multipart.maxFileSize=5MB
multipart.maxRequestSize=5MB

# http server SETTINGS (SpringApplication)
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
#server.port=8080

server.port=9200
#eureka issue:http://blog.csdn.net/lc0817/article/details/54375802
#指定数据中心
eureka.datacenter=foss1
#Eureka Server端：配置关闭自我保护，并按需配置Eureka Server清理无效节点的时间间隔。
#eureka.server.enable-self-preservation # 设为false，关闭自我保护
#eureka.server.eviction-interval-timer-in-ms # 清理间隔（单位毫秒，默认是60*1000）
eureka.server.enable-self-preservation=false
#Eureka Client端：配置开启健康检查，并按需配置续约更新时间和到期时间。
#eureka.client.healthcheck.enabled # 开启健康检查（需要spring-boot-starter-actuator依赖）
#eureka.instance.lease-renewal-interval-in-seconds # 续约更新时间间隔（默认30秒）
#eureka.instance.lease-expiration-duration-in-seconds # 续约到期时间（默认90秒）
eureka.client.healthcheck.enabled=true
eureka.dashboard.path=/eurekaui
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=false
eureka.client.serviceUrl.defaultZone=http://localhost:${server.port}/eureka/


# consul register provider, to add @EnableDiscoveryClient enable register.
#spring.application.name=Consul-Server-1
#spring.cloud.consul.host=localhost
#spring.cloud.consul.port=8500
#spring.cloud.consul.enabled=true
#spring.cloud.consul.discovery.enabled=true
#spring.cloud.consul.discovery.instanceId=tomcat1
#spring.cloud.consul.discovery.serviceName=tomcat
#spring.cloud.consul.discovery.hostname=localhost
#spring.cloud.consul.discovery.port=${server.port}
#spring.cloud.consul.discovery.healthCheckUrl=http://localhost:8080/health
#spring.cloud.consul.discovery.healthCheckInterval=10s
#spring.cloud.consul.discovery.tags=dev
#<dependency>
#<groupId>org.springframework.cloud</groupId>
#<artifactId>spring-cloud-starter-consul-discovery</artifactId>
#</dependency>