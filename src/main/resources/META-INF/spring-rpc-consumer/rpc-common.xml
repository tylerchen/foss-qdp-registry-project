<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<description>
	<![CDATA[
		Spring RPC HttpInvoker consumer
	]]>
	</description>
	<bean id="httpInvokerRequestExecutor"
		class="org.iff.infra.util.spring.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor"
		scope="prototype">
		<constructor-arg index="0" ref="httpClient" />
		<constructor-arg index="1" ref="requestConfig" />
	</bean>
	<!--创建httpclient的连接池 -->
	<bean id="httpClientConnectionManager"
		class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager"
		destroy-method="shutdown">
		<!-- 设置最大连接数 -->
		<property name="maxTotal" value="${rpc.conn.maxTotal}" />
		<!-- 设置每个主机的并发数 -->
		<property name="defaultMaxPerRoute" value="${rpc.conn.defaultMaxPerRoute}" />
	</bean>

	<!-- 创建httpClient对象 -->
	<!-- httpClient是由HttpClientBuilder通过build方法创建，这个可以设置连接池 -->
	<!-- 1.创建HttpClientBuilder -->
	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder">
		<!--设置连接池 -->
		<property name="connectionManager" ref="httpClientConnectionManager"></property>
	</bean>
	<!-- 2.创建httpClient -->
	<!-- 通过httpClientBulider得到httpClient对象，并且设置httpClient为多例模式 -->
	<!-- 要保证httpClient为多利，以为每次都是新的http请求 -->
	<bean id="httpClient" class="org.apache.http.impl.client.CloseableHttpClient"
		factory-bean="httpClientBuilder" factory-method="build" scope="prototype" />

	<!-- 构造请求参数 -->
	<bean id="requestConfigBuilder" class="org.apache.http.client.config.RequestConfig.Builder">
		<!-- 创建连接的最长时间 -->
		<property name="connectTimeout" value="${rpc.conn.connectTimeout}" />
		<!-- 从连接池中获取到连接的最长时间 -->
		<property name="connectionRequestTimeout" value="${rpc.conn.connectionRequestTimeout}" />
		<!-- 数据传输的最长时间 -->
		<property name="socketTimeout" value="${rpc.conn.socketTimeout}" />
		<!-- 提交请求前测试连接是否可用 -->
		<property name="staleConnectionCheckEnabled" value="${rpc.conn.staleConnectionCheckEnabled}" />
	</bean>
	<bean id="requestConfig" class="org.apache.http.client.config.RequestConfig"
		factory-bean="requestConfigBuilder" factory-method="build" />


	<!--清理无效的http连接 -->
	<bean
		class="org.iff.infra.util.spring.remoting.httpinvoker.HttpIdleConnectionEvictor"
		destroy-method="shutdown">
		<constructor-arg index="0" ref="httpClientConnectionManager" />
	</bean>
</beans>